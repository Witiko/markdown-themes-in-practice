\documentclass[final]{ltugboat}
\usepackage[T1]{fontenc} % tt \_
\usepackage{lmodern}
\usepackage{microtype}
\usepackage{graphicx}
\usepackage[hidelinks,pdfa]{hyperref}
\usepackage{hologo}
\makeatletter
% listings float without package
\newenvironment{listing*}{\@dblfloat{listing}}{\end@dblfloat}
\def\ext@listing{lol}
\newcommand*{\ftype@listing}{4}
\newcounter{listing}
\newcommand*{\fnum@listing}{\textbf{Listing~\thelisting}}
\def\fps@listing{p}
\makeatother
\usepackage{fancyvrb,fvextra}
\fvset{breaklines}
\usepackage{tikz}
\def\url{\tbsurl}
% silence font warnings:
% LaTeX Font Warning: Font shape `OT1/cmr/m/n' in size <45> not available
% (Font)              size <24.88> substituted on input line 94.
\makeatletter\def\@font@warning#1{}\makeatother

%%% Start of metadata %%%
\title{Markdown themes in practice}

% repeat info for each author; comment out items that don't apply.
\author{Vít Starý Novotný}
\address{Studená 453/15 \\ Brno 63800, Czech Republic}
\netaddress{witiko (at) mail dot muni dot cz}
\personalURL{github.com/witiko}

%%% End of metadata %%%

\begin{document}
\maketitle

\begin{abstract}
The Markdown package for \TeX{} supports themes that allow
\TeX nicians to tailor the presentation of Markdown and \acro{YAML} content
on the page. In this article, I will show the current state of Markdown
themes using the example of \LaTeX{} templates that I developed for the
International Software Testing Qualifications Board (\acro{ISTQB}).
Readers will leave with actionable steps to create or modify Markdown
themes for \LaTeX, and insights into extending these principles to other
\TeX{} engines.
\end{abstract}

\section*{Introduction}
Although \TeX{} has beautiful output, its input macro language is an acquired taste for many authors. The Markdown package for \TeX~\cite{novotny2017markdown} allows authors to type familiar Markdown and \acro{YAML} directly into a \TeX{} document and receive a similarly beautiful output.

In my previous article, I introduced Markdown themes~\cite{novotny2021markdown}. Much like \acro{CSS} stylesheets, Markdown themes allow \TeX nicians to tailor the presentation of Markdown and \acro{YAML} content without complicating the document markup for authors. While that article used simple examples to explain the basic concepts behind Markdown themes, it did not demonstrate their application on a larger scale in real-world software projects.

In July 2023, I began working with the International Software Testing Qualifications Board (\acro{ISTQB}) to help them typeset their certification study materials from Markdown and \acro{YAML} sources. In this article, I discuss my work as a case study of using the Markdown package in a real-world software project.

\section*{Project overview}
In my work, I developed a \LaTeX{} document class and six Markdown themes~\cite{istqb2024productbase}.

The \LaTeX{} document class is named \texttt{istqb} and it is stored in file \texttt{template/istqb.cls}. It implements the design of all \acro{ISTQB} documents, defines the meaning of common Unicode characters, and defines \LaTeX{} markup such as \cs{istqbsection}, \texttt{\textbackslash istqblandscape\-begin} and \texttt{end}, and \texttt{\textbackslash begin\{istqbobjectives\}}\,\ldots\ \texttt{\textbackslash end\{istqbobjectives\}}.

\begin{figure*}
\centering
\includegraphics[width=\linewidth]{class-diagram}
\caption{A class diagram of the six Markdown themes that I developed for the International Software Testing Qualifications Board (\acro{ISTQB}). The snippets \texttt{language}, \texttt{metadata}, and \texttt{questions} specify the public interface of the themes. The arrows specify inheritance, e.g. the theme \texttt{istqb/sample-exam/answers} loads both themes \texttt{istqb/common} and \texttt{istqb/sample-exam} and implements all three snippets.}
\label{fig:class-diagram}
\end{figure*}

The Markdown themes are named \texttt{istqb/*} and stored in files \texttt{template/markdowntheme*.sty}, see also Figure~\ref{fig:class-diagram}. Here is a description of the themes:
\begin{itemize}
\item The theme \texttt{istqb/common} sets up Markdown syntax extensions, implements the loading of \acro{YAML} language definitions and document metadata into \TeX{} macros, and defines the mapping between Markdown elements and \LaTeX{} markup. The remaining themes are based on this theme and they implement support for specific types of \acro{ISTQB} documents.
\item The \texttt{istqb/body-of-knowledge} and  \texttt{syllabus} themes are used in \acro{ISTQB} Body of Knowledge and Syllabus documents. At the time of writing, the themes implement no extra functionality.
\item The theme \texttt{istqb/sample-exam} implements the loading of \acro{YAML} question definitions into \TeX{} macros in \acro{ISTQB} Sample Exam Questions and Answers documents. The following two themes are based on this theme.
\item The theme \texttt{istqb/sample-exam/questions} implements the typesetting of questions in \acro{ISTQB} Sample Exam Questions documents.
\item The theme \texttt{istqb/sample-exam/answers} implements the typesetting of answers in \acro{ISTQB} Sample Exam Answers documents.
\end{itemize}

In the rest of the article, I discuss the different parts of the implementation. Since \LaTeX{} document classes seem well-understood, I focus primarily on Markdown themes.
First, in Section~\ref{sec:syntax-extensions}, I describe the syntax extensions set up by the themes. Then, in Section~\ref{sec:yaml}, I describe how the themes process \acro{YAML} content. Finally, in Section~\ref{sec:mapping}, I describe how the themes map Markdown elements onto \LaTeX{} markup.

\iffalse
Each section is structured as follows: First, I give a broader context for the topic of the section. Then, I describe the implementation using one or more code examples. Finally, I show a relevant excerpt from the example ISTQB Syllabus document~\cite{istqb2024example} and the typeset output.
\else
\nocite{istqb2024example}
\fi

\section{Syntax extensions}
\label{sec:syntax-extensions}
\subsection{Attributes}
% headerAttributes [@istqb2024example, Section 1.8]
% linkAttributes [@istqb2024example, sections 1.9 and 1.13]
\subsection{References}
% relativeReferences [@istqb2024example, sections 1.8 through 1.10]
% citations [@istqb2024example, Section 1.12]
\subsection{Tables}
% pipeTables, tableCaptions [@istqb2024example, sections Revision History and 1.11]
% tableAttributes [@istqb2024example, Section 1.10]
\subsection{\acro{YAML} content}
% jekyllData, expectJekyllData [@istqb2024example, Section 1.1]
\subsection{Complex typography}
% rawAttribute [Section 1.11]
% superscripts, subscripts [@istqb2024example, Section 1.5]
\section{Processing \acro{YAML} content}
\label{sec:yaml}
\subsection{Language definitions}
\subsection{Document metadata}
\subsection{Question definitions}
\section{Mapping from Markdown to \LaTeX{}}
\label{sec:mapping}
\subsection{Sections}
% headingOne, headingTwo, headingThree, headingFour [@istqb2024example, Section 1.8]
% attributeClassName: unnumbered, landscape [@istqb2024example, Section 1.7]
\subsection{References}
% relativeReferences [@istqb2024example, sections 1.8 through 1.10]
% citations [@istqb2024example, Section 1.12]
\subsection{Tables}
% [@istqb2024example, sections 1.11 and Revision History]
\subsection{Objective lists}
% [@istqb2024example, sections 1.2]
\subsection{Question definitions}

\section*{Conclusion}

\SetBibJustification{\raggedright \advance\itemsep by 2pt plus1pt minus1pt }
\bibliographystyle{tugboat}
\begingroup
\gappto{\UrlBreaks}{\UrlOrds}
\bibliography{tb140starynovotny-markdown}
\endgroup

\makesignature
\end{document}