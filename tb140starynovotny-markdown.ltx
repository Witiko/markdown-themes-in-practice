\documentclass[final]{ltugboat}
\usepackage[T1]{fontenc} % tt \_
\usepackage{lmodern}
\usepackage{microtype}
\usepackage{graphicx}
\usepackage[hidelinks,pdfa]{hyperref}
\usepackage{hologo}
\usepackage{minted}
\AtBeginEnvironment{minted}{\let\textit\textsl}
\usemintedstyle{bw}
\usepackage{tikz}
\usetikzlibrary{positioning}
\def\url{\tbsurl}
% silence font warnings:
% LaTeX Font Warning: Font shape `OT1/cmr/m/n' in size <45> not available
% (Font)              size <24.88> substituted on input line 94.
\makeatletter\def\@font@warning#1{}\makeatother

%%% Start of metadata %%%
\title{Markdown themes in practice}

% repeat info for each author; comment out items that don't apply.
\author{Vít Starý Novotný}
\address{Studená 453/15 \\ Brno 63800, Czech Republic}
\netaddress{witiko (at) mail dot muni dot cz}
\personalURL{github.com/witiko}

%%% End of metadata %%%

\begin{document}
\maketitle

\begin{abstract}
The Markdown package for \TeX{} supports themes that allow
\TeX nicians to tailor the presentation of Markdown and \acro{YAML} content
on the page. In this article, I will show the current state of Markdown
themes using the example of \LaTeX{} templates that I developed for the
International Software Testing Qualifications Board (\acro{ISTQB}).
Readers will leave with actionable steps to create or modify Markdown
themes for \LaTeX, and insights into extending these principles to other
\TeX{} engines.
\end{abstract}

\section*{Introduction}
Although \TeX{} has beautiful output, its input macro language is an acquired taste for many authors. The Markdown package for \TeX~\cite{novotny2017markdown} allows authors to type familiar Markdown and \acro{YAML} directly into a \TeX{} document and receive a similarly beautiful output.

In my previous article, I introduced Markdown themes~\cite{novotny2021markdown}. Much like \acro{CSS} stylesheets, Markdown themes allow \TeX nicians to tailor the presentation of Markdown and \acro{YAML} content without complicating the document markup for authors. While that article used simple examples to explain the basic concepts behind Markdown themes, it did not demonstrate their application on a larger scale in real-world software projects.

In July 2023, I began working with the International Software Testing Qualifications Board (\acro{ISTQB}) to help them typeset their certification study materials from Markdown and \acro{YAML} sources. In this article, I discuss my work as a case study of using the Markdown package in a real-world software project.

\begin{figure*}
\centering
\includegraphics[width=\linewidth]{images/class-diagram}
\caption{A class diagram of the six Markdown themes that I developed for the International Software Testing Qualifications Board (\acro{ISTQB}). The snippets \texttt{language}, \texttt{metadata}, \texttt{questions}, \texttt{answer-key}, and \texttt{answers} specify the public interface of the themes. The arrows specify inheritance. For example, the theme \texttt{istqb/sample-exam/answers} loads both themes \texttt{istqb/common} and \texttt{istqb/sample-exam} and implements all five snippets.}
\label{fig:class-diagram}
\end{figure*}

\section*{Project overview}
In my work, I developed a \LaTeX{} document class and six Markdown themes~\cite{istqb2024productbase}.

The \LaTeX{} document class is named \texttt{istqb} and it is stored in file \texttt{template/istqb.cls}. It implements the design of all \acro{ISTQB} documents, defines the meaning of common Unicode characters, and defines \LaTeX{} markup such as \cs{istqbsection}, \texttt{\textbackslash istqblandscape\-begin} and \texttt{end}, and \texttt{\textbackslash begin\{istqbobjectives\}}\,\ldots\ \texttt{\textbackslash end\{istqbobjectives\}}.

The Markdown themes are named \texttt{istqb/*} and stored in files \texttt{template/markdowntheme*.sty}, see also Figure~\ref{fig:class-diagram}. Here is a description of the themes:
\begin{itemize}
\item The theme \texttt{istqb/common} enables Markdown syntax extensions, implements the loading of \acro{YAML} language definitions and document metadata into \TeX{} macros, and defines the mapping between Markdown elements and \LaTeX{} markup. The remaining themes are based on this theme and they implement support for specific types of \acro{ISTQB} documents.
\item The \texttt{istqb/body-of-knowledge} and  \texttt{syllabus} themes are used in \acro{ISTQB} Body of Knowledge and Syllabus documents. At the time of writing, the themes implement no extra functionality.
\item The theme \texttt{istqb/sample-exam} implements the loading of \acro{YAML} question definitions into \TeX{} macros in \acro{ISTQB} Sample Exam Questions and Answers documents. The following two themes are based on this theme.
\item The theme \texttt{istqb/sample-exam/questions} implements the typesetting of questions in \acro{ISTQB} Sample Exam Questions documents.
\item The theme \texttt{istqb/sample-exam/answers} implements typesetting of answer keys and answers in \acro{ISTQB} Sample Exam Answers documents.
\end{itemize}
\vfill

\noindent
\begin{tikzpicture}[every node/.style={inner sep=0pt, outer sep=0pt}]
  \node (wolf) at (0, 0) {\includegraphics[width=\linewidth]{images/detective-wolf.jpg}};
  \node [above=-4.5mm of wolf, text width=\linewidth, align=justify] {In the rest of this article, I discuss different parts of the implementation. In each section, I first present an example document and I show the typeset output. Then, I explain the implementation.};
  \node [below=3mm of wolf, text width=\linewidth, align=center] {With Markdown themes, your document can look like anything, even like a wolf in a disguise.};
\end{tikzpicture}%
\vspace{-0.65mm}

\section{Processing \acro{YAML} content}
\label{sec:yaml}
The themes define snippets \texttt{metadata}, \texttt{language}, and \texttt{questions} for processing \acro{YAML} files with document metadata, language definitions, and question definitions, respectively.

\subsection{Document metadata}
Here is an example \acro{ISTQB} Syllabus document that loads document metadata from a \acro{YAML} file named \texttt{metadata.yml} and typesets a landing page:
\inputminted{latex}{examples/landing-page.tex}

\noindent
Here is the \acro{YAML} file \texttt{metadata.yml}:
\inputminted{yaml}{examples/metadata.yml}

Typesetting the example \acro{ISTQB} Syllabus document produces the following output:
\smallskip

\begingroup
\centering
\setlength{\fboxsep}{0pt}
\fbox{\includegraphics[width=.625\linewidth, trim={15mm 30mm 15mm 40mm}, clip]{examples/landing-page}}
\par
\endgroup

\subsection{Language definitions}
\subsection{Question definitions}

\section{Typesetting Markdown content}
\label{sec:markdown}
\subsection{Landing page}
% [@istqb2024example, Section 1.1]
\subsection{Learning objectives}
% [@istqb2024example, Section 1.2]
\subsection{Superscripts and subscripts}
% [@istqb2024example, Section 1.5]
\subsection{Sections}
% [@istqb2024example, Section 1.7]
\subsection{Figures}
% [@istqb2024example, Section 1.9]
\subsection{Simple tables}
% [@istqb2024example, Section 1.10]
\subsection{Complex tables}
% [@istqb2024example, Section 1.11]
% [@istqb2024productbase, Issue #51]
\subsection{Cross-references}
% [@istqb2024example, sections 1.8--1.10]
\subsection{Citations}
% [@istqb2024example, Section 1.12]
\subsection{Indexing}
% [@istqb2024example, Section 1.13]
\subsection{Questions}
% [@istqb2024producttemplate, File sample-exam-questions.tex]
\subsection{Answer key}
% [@istqb2024producttemplate, File sample-exam-answers.tex]
\subsection{Answers}
% [@istqb2024producttemplate, File sample-exam-answers.tex]
\section*{Conclusion}

\SetBibJustification{\raggedright \advance\itemsep by 2pt plus1pt minus1pt }
\bibliographystyle{tugboat}
\begingroup
\gappto{\UrlBreaks}{\UrlOrds}
\bibliography{tb140starynovotny-markdown}
\endgroup

\makesignature
\end{document}